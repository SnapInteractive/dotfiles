#!/usr/bin/bash
# 
# Ability to get specific arguments or test it's existience
# will return the first found argument
#
# Copyright 2012 Wei Kin Huang <wei@closedinterval.com>
# 
# Permission to use, copy, modify, distribute, and sell this software and
# its documentation for any purpose is hereby granted without fee, provided
# that the above copyright notice appear in all copies and that both that
# copyright notice and this permission notice appear in supporting
# documentation.  No representations are made about the suitability of this
# software for any purpose.  It is provided "as is" without express or
# implied warranty.
# 
# usage: getopt_assert flagname[-a] -arg1 -a rg2 --longarg3 --longarg4=something

# the first argument is our search term
SEARCH=$1
shift

# short circuit to prevent looping if there are no args that look like the search term
if [[ ! "$@" =~ "$SEARCH" ]]; then
echo "hi";
	exit 1
fi

while test $# -gt 0
do
	if [[ "$1" == $SEARCH* ]]; then
		# get the substring of the argument sans the arg name itself
		SUBARG="${1#$SEARCH}"

		# search for longopt 
		if [[ "$1" == --* ]]; then
			# eg. --longopt something OR --longopt eol
			if [[ -z "$SUBARG" && "$2" != -* && -n "$2" ]]; then
				echo "$2"
				exit 0
			fi
			# eg. --longopt
			if [[ -z "$SUBARG" ]]; then
				exit 0
			fi
			# eg. --longopt=abcqwrer
			if [[ "${SUBARG:0:1}" == "=" ]]; then
				echo "${SUBARG#=}"
				exit 0
			fi
			# not quite right eg. --longopt1
			shift
			continue
		fi
		# search for shortopt
		if [[ "$1" == -* ]]; then
			# eg. -a something
			if [[ -z "$SUBARG" && "$2" != -* && -n "$2" ]]; then
				echo "$2"
				exit 0
			fi
			# eg. -a
			if [[ -z "$SUBARG" ]]; then
				exit 0
			fi
			# eg. -asomething
			echo "$SUBARG"
			exit 0
		fi
	fi
	shift
done

exit 1
