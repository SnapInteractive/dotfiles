# quick reference to colors
PS1_COLOR_NORMAL='\[\e[m\]'
PS1_COLOR_BOLD='\[\e[1m\]'
PS1_COLOR_UNDERLINE='\[\e[4m\]'
PS1_COLOR_RESET='\[\e[0m\]'
PS1_COLOR_GREY='\[\e[38;5;244m\]'
PS1_COLOR_DARK_GREY='\[\e[38;5;235m\]'

# colors for individual parts of the bash prompt
PS1_COLOR_EXIT_ERROR='\[\e[38;5;196m\]'
PS1_COLOR_BG_JOBS='\[\e[38;5;42m\]'
PS1_COLOR_USER='\[\e[38;5;197m\]'
PS1_COLOR_HOST='\[\e[38;5;208m\]'
PS1_COLOR_HOST_SCREEN=$PS1_COLOR_UNDERLINE'\[\e[38;5;214m\]'
PS1_COLOR_WORK_DIR='\[\e[38;5;142m\]'
PS1_COLOR_WORK_DIRINFO='\[\e[38;5;35m\]'
PS1_COLOR_GIT='\[\e[38;5;135m\]'
PS1_COLOR_TIME_AM='\[\e[38;5;244m\]'
PS1_COLOR_TIME_PM='\[\e[38;5;033m\]'

# load avg colorization
PS1_COLOR_LOAD='
	loadcolors_0="\[\e[38;5;111m\]"
	loadcolors_1="\[\e[38;5;110m\]"
	loadcolors_2="\[\e[38;5;109m\]"
	loadcolors_3="\[\e[38;5;108m\]"
	loadcolors_4="\[\e[38;5;107m\]"
	loadcolors_5="\[\e[38;5;106m\]"
	loadcolors_6="\[\e[38;5;178m\]"
	loadcolors_7="\[\e[38;5;172m\]"
	loadcolors_8="\[\e[38;5;166m\]"
	loadcolors_9="\[\e[38;5;167m\]"
'

# If we want a monochrome bash prompt
if [[ -n $_PS1_MONOCHROME ]]; then
	# colors for individual parts of the bash prompt
	COLOR_EXIT_ERROR='\[\e[38;5;244m\]'
	COLOR_BG_JOBS='\[\e[38;5;244m\]'
	COLOR_USER='\[\e[38;5;244m\]'
	COLOR_HOST='\[\e[38;5;244m\]'
	COLOR_HOST_SCREEN=$PS1_COLOR_UNDERLINE'\[\e[38;5;244m\]'
	COLOR_WORK_DIR='\[\e[38;5;244m\]'
	COLOR_WORK_DIRINFO='\[\e[38;5;244m\]'
	COLOR_GIT='\[\e[38;5;244m\]'
	COLOR_TIME_AM='\[\e[38;5;244m\]'
	COLOR_TIME_PM='\[\e[38;5;244m\]'

	# load avg colorization
	PS1_COLOR_LOAD='
		loadcolors_0="\[\e[38;5;244m\]"
		loadcolors_1="\[\e[38;5;244m\]"
		loadcolors_2="\[\e[38;5;244m\]"
		loadcolors_3="\[\e[38;5;244m\]"
		loadcolors_4="\[\e[38;5;244m\]"
		loadcolors_5="\[\e[38;5;244m\]"
		loadcolors_6="\[\e[38;5;244m\]"
		loadcolors_7="\[\e[38;5;244m\]"
		loadcolors_8="\[\e[38;5;244m\]"
		loadcolors_9="\[\e[38;5;244m\]"
	'
fi

# Keep a cached date variable for prompt testing
__push_prompt_command '__ps1_var_date=$(/bin/date +%s)'

# caching the directory information for bash prompt to reduce disk reads
__ps1_var_dirinfo="0|0b"
__ps1_var_dirinfotime=0
__ps1_var_dirinfoprev=0
[[ -z $__ps1_var_dirinforeloadtime ]] && __ps1_var_dirinforeloadtime=60
function __ps1_dir_wrapper() {
	local lsout lsnum lssize

	# refresh every minute or on directory change
	if [[ $(( $__ps1_var_date - $__ps1_var_dirinforeloadtime )) -gt $__ps1_var_dirinfotime || "$PWD" != "$__ps1_var_dirinfoprev" ]]; then
		lsout=$(/bin/ls -lAh)
		lsnum=$(($(echo "${lsout}" | \wc -l | \sed "s/ //g") - 1))
		lssize="$(echo "${lsout}" | \grep -m 1 total | \sed "s/total //")b"
	
		__ps1_var_dirinfo="${lsnum}|${lssize}"
		__ps1_var_dirinfoprev="$PWD"
		__ps1_var_dirinfotime=$(/bin/date +%s)
		# update the prompt time
		__ps1_var_date=$__ps1_var_dirinfotime
	fi
}
# only run working directory information command when enabled
if [[ -z $_PS1_HIDE_DIR_INFO ]] ; then
	__push_prompt_command '__ps1_dir_wrapper'
fi

# generate the bash prompt
function __ps1_create() {
	# load avg colorization
	local loadavg='load=$(__ps1_proc_use)'

	# special case for osx systems with older sed
	case $DOTENV in
		linux)
			loadavg=$loadavg'
				__ps1_var_loadmod=$(echo "${load}" | \\sed "s/^0*\\([0-9]\\+\\)\\..\\+\\$/\\1/")
			'
			;;
		darwin)
			loadavg=$loadavg'
				__ps1_var_loadmod=$(echo "${load}" | \\sed "s/^0*\\([0-9][0-9]*\\)\\..*\\$/\\1/")
			'
			;;
	esac
	loadavg=$loadavg$PS1_COLOR_LOAD'
		[ $__ps1_var_loadmod -gt 9 ] && __ps1_var_loadmod=9
		loadcolor="loadcolors_${__ps1_var_loadmod}"
		echo "${!loadcolor}${load}'"${PS1_COLOR_RESET}"' "
	'
	if [[ -n "$_PS1_HIDE_LOAD" ]] ; then
		loadavg=''
	fi
	
	# datetime colorization
	local datetime='
		time=$(/bin/date +"%H" | sed 's/^0//')
		color="'"${PS1_COLOR_TIME_PM}"'"
		if [[ ${time} -ge 8 && ${time} -le 18 ]]; then
		   color="'"${PS1_COLOR_TIME_AM}"'"
		fi
		echo "${color}\T'"${PS1_COLOR_RESET}"'"
	';

	# Start PS1 description
	PS1=''
	# open bracket
	PS1="$PS1""${PS1_COLOR_BOLD}${PS1_COLOR_GREY}"'['"${PS1_COLOR_RESET}"
	# show exit code
	PS1="$PS1""${PS1_COLOR_EXIT_ERROR}"'$(EXIT="$?"; [ $EXIT -ne 0 ] && echo -n "(E:${EXIT}) ")'"${PS1_COLOR_RESET}"
	# show number of background jobs
	PS1="$PS1""${PS1_COLOR_BG_JOBS}"'$([ \j -gt 0 ] && echo -n "bg:\j ")'"${PS1_COLOR_RESET}"
	# time
	PS1="$PS1\$($datetime)"' '
	# load
	PS1="$PS1\$($loadavg)"
	# user
	PS1="$PS1""${PS1_COLOR_USER}"'\u'"${PS1_COLOR_RESET}"
	# [@] based on environment
	PS1="$PS1""${PS1_COLOR_GREY}"
	# If ssh connection
	if [[ -n "${SSH_CONNECTION:-}" ]]; then
		PS1="$PS1"'@'
	else
		# otherwise
		PS1="$PS1"'#'
	fi
	PS1="$PS1""${PS1_COLOR_RESET}"
	# [host|screen session]
	case "$TERM" in
		screen*)
			PS1="$PS1""${PS1_COLOR_HOST_SCREEN}""$STY"
			;;
		*)
			PS1="$PS1""${PS1_COLOR_HOST}"'\h'
			;;
	esac
	# space
	PS1="$PS1""${PS1_COLOR_RESET}"' '
	# working directory
	PS1="$PS1""${PS1_COLOR_WORK_DIR}"'\W'"${PS1_COLOR_RESET}"
	# working directory information (number of files | total file size)
	if [[ -z "$_PS1_HIDE_DIR_INFO" ]] ; then
		PS1="$PS1""${PS1_COLOR_WORK_DIRINFO}"'<${__ps1_var_dirinfo}>'"${PS1_COLOR_RESET}"
	fi
	# git status only if the git repo status function is installed
	type __git_ps1 &> /dev/null
	if [[ $? == 0 ]]; then
		PS1="$PS1""${PS1_COLOR_GIT}"'$(__git_ps1 " (%s)")'"${PS1_COLOR_RESET}"
	fi
	# close bracket
	PS1="$PS1""${PS1_COLOR_BOLD}${PS1_COLOR_GREY}"']'"${PS1_COLOR_RESET}"
	# prompt symbol
	case "$UID" in
		0 )
			PS1="$PS1""${PS1_COLOR_BOLD}$(echo -e "\xCE\xBC")${PS1_COLOR_RESET}"
			;;
		* )
			PS1="$PS1""${PS1_COLOR_BOLD}$(echo -e "\xCE\xBB")${PS1_COLOR_RESET}"
			;;
	esac
	# space
	PS1="$PS1"' '

	# Set the title bar if we are in xterm
	case "$TERM" in
		xterm*|rxvt*)
			PS1="\[\e]0;\u@\h:\W\007\]$PS1"
			;;
		*)
			;;
	esac
}

# generate the bash prompt
function __ps2_create() {
	PS2="$(echo -e "\xe2\x86\x92") "
}

# generate the sudo bash prompt
function __sudo_ps1_create() {
	# datetime colorization
	local datetime='
		time=$(/bin/date +"%H" | sed 's/^0//')
		color="'"${PS1_COLOR_TIME_PM}"'"
		if [[ ${time} -ge 8 && ${time} -le 18 ]]; then
		   color="'"${PS1_COLOR_TIME_AM}"'"
		fi
		echo "${color}\T'"${PS1_COLOR_RESET}"'"
	';

	# Start SUDO_PS1 description
	SUDO_PS1=''
	# open bracket
	SUDO_PS1="$SUDO_PS1""${PS1_COLOR_BOLD}${PS1_COLOR_GREY}"'['"${PS1_COLOR_RESET}"
	# show exit code
	SUDO_PS1="$SUDO_PS1""${PS1_COLOR_EXIT_ERROR}"'$(EXIT="$?"; [ $EXIT -ne 0 ] && echo -n "(E:${EXIT}) ")'"${PS1_COLOR_RESET}"
	# show number of background jobs
	SUDO_PS1="$SUDO_PS1""${PS1_COLOR_BG_JOBS}"'$([ \j -gt 0 ] && echo -n "bg:\j ")'"${PS1_COLOR_RESET}"
	# time
	SUDO_PS1="$SUDO_PS1\$($datetime)"' '
	# user
	SUDO_PS1="$SUDO_PS1""${PS1_COLOR_USER}"'\u'"${PS1_COLOR_RESET}"
	# [@] based on environment
	SUDO_PS1="$SUDO_PS1""${PS1_COLOR_GREY}"
	# If ssh connection
	if [[ -n "${SSH_CONNECTION:-}" ]]; then
		SUDO_PS1="$SUDO_PS1"'@'
	else
		# otherwise
		SUDO_PS1="$SUDO_PS1"'#'
	fi
	SUDO_PS1="$SUDO_PS1""${PS1_COLOR_RESET}"
	# [host|screen session]
	case "$TERM" in
		screen*)
			SUDO_PS1="$SUDO_PS1""${PS1_COLOR_HOST_SCREEN}""$STY"
			;;
		*)
			SUDO_PS1="$SUDO_PS1""${PS1_COLOR_HOST}"'\h'
			;;
	esac
	# space
	SUDO_PS1="$SUDO_PS1""${PS1_COLOR_RESET}"' '
	# working directory
	SUDO_PS1="$SUDO_PS1""${PS1_COLOR_WORK_DIR}"'\W'"${PS1_COLOR_RESET}"
	# close bracket
	SUDO_PS1="$SUDO_PS1""${PS1_COLOR_BOLD}${PS1_COLOR_GREY}"']'"${PS1_COLOR_RESET}"
	# prompt symbol
	case "$UID" in
		0 )
			SUDO_PS1="$SUDO_PS1""${PS1_COLOR_BOLD}$(echo -e "\xCE\xBC")${PS1_COLOR_RESET}"
			;;
		* )
			SUDO_PS1="$SUDO_PS1""${PS1_COLOR_BOLD}$(echo -e "\xCF\x80\x0A")${PS1_COLOR_RESET}"
			;;
	esac
	# space
	SUDO_PS1="$SUDO_PS1"' '

	# Set the title bar if we are in xterm
	case "$TERM" in
		xterm*|rxvt*)
			SUDO_PS1="\[\e]0;\u@\h:\W\007\]$SUDO_PS1"
			;;
		*)
			;;
	esac
}

# Execute the prompt creation function
__ps1_create
export PS1

# export the interactive prompt line of the shell
__ps2_create
export PS2

# export the sudo'd bash prompt
__sudo_ps1_create
export SUDO_PS1

# clean up these functions
unset __ps1_create \
	__ps2_create \
	__sudo_ps1_create

# unset variables so they don't leak out to the bash shell
unset PS1_COLOR_BOLD \
	PS1_COLOR_UNDERLINE \
	PS1_COLOR_RESET \
	PS1_COLOR_GREY \
	PS1_COLOR_DARK_GREY \
	PS1_COLOR_EXIT_ERROR \
	PS1_COLOR_BG_JOBS \
	PS1_COLOR_USER \
	PS1_COLOR_HOST \
	PS1_COLOR_HOST_SCREEN \
	PS1_COLOR_WORK_DIR \
	PS1_COLOR_WORK_DIRINFO \
	PS1_COLOR_GIT \
	PS1_COLOR_TIME_AM \
	PS1_COLOR_TIME_PM \
	PS1_COLOR_LOAD

# show git status
export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_SHOWSTASHSTATE=true
export GIT_PS1_SHOWUNTRACKEDFILES=true
export GIT_PS1_SHOWUPSTREAM="auto"
